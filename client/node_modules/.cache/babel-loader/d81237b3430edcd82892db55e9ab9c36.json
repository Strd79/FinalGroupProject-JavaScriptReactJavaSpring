{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/codeclanstudent/Desktop/FinalGroupProject-JavaScriptReactJavaSpring/client/src/components/SpeechComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nconst [speechinput, setSpeechInput] = useState(\"\");\n\nconst SpeechComponent = () => {\n  _s();\n\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return null;\n  } else {\n    setSpeechInput(transcript);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SpeechRecognition.startListening,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SpeechRecognition.stopListening,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetTranscript,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You said: \", transcript]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SpeechComponent, \"jh1/qkmPhH2Ui4CQVO5LElRfLv0=\", false, function () {\n  return [useSpeechRecognition];\n});\n\n_c = SpeechComponent;\nexport default SpeechComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpeechComponent\");","map":{"version":3,"sources":["/Users/codeclanstudent/Desktop/FinalGroupProject-JavaScriptReactJavaSpring/client/src/components/SpeechComponent.js"],"names":["React","useState","SpeechRecognition","useSpeechRecognition","speechinput","setSpeechInput","SpeechComponent","transcript","resetTranscript","browserSupportsSpeechRecognition","startListening","stopListening"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,iBAAP,IAA4BC,oBAA5B,QAAwD,0BAAxD;AAEA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAA+BJ,QAAQ,CAAC,EAAD,CAA7C;;AAEA,MAAMK,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAkCL,oBAAoB,EAA5D;;AAEA,MAAI,CAACD,iBAAiB,CAACO,gCAAlB,EAAL,EAA2D;AACvD,WAAO,IAAP;AACH,GAFD,MAEM;AACFJ,IAAAA,cAAc,CAACE,UAAD,CAAd;AACH;;AAED,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEL,iBAAiB,CAACQ,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAER,iBAAiB,CAACS,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEH,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,+BAAcD,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAQH,CAjBD;;GAAMD,e;UACsCH,oB;;;KADtCG,e;AAmBN,eAAeA,eAAf","sourcesContent":["import React, {useState} from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n\nconst [speechinput, setSpeechInput] =useState(\"\");\n\nconst SpeechComponent = () => {\n    const { transcript, resetTranscript } = useSpeechRecognition()\n\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n        return null\n    } else{\n        setSpeechInput(transcript);\n    }\n\n    return(\n        <>\n            <button onClick={SpeechRecognition.startListening}>Start</button>\n            <button onClick={SpeechRecognition.stopListening}>Stop</button>\n            <button onClick={resetTranscript}>Reset</button>\n            <p>You said: {transcript}</p>\n        </>\n    )\n}\n\nexport default SpeechComponent;"]},"metadata":{},"sourceType":"module"}